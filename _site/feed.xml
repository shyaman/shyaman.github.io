<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shyaman Jayasundara</title>
    <description>Sito personale e portfolio di Cristian Castellari: Tecnico e Manager IT, nel tempo libero mi dedico alla famiglia e gioco con PS4 e Switch</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 08 Aug 2018 00:32:05 +0530</pubDate>
    <lastBuildDate>Wed, 08 Aug 2018 00:32:05 +0530</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>Blocco delle applicazioni con K1000</title>
        <description>&lt;h1 id=&quot;premessa&quot;&gt;Premessa&lt;/h1&gt;

&lt;p&gt;In questa veloce guida si dà per scontato che il lettore abbia già una buona conoscenza dell’ambiente KACE 1000 (KACE SMA) e del funzionamento delle etichette (&lt;em&gt;Labels&lt;/em&gt;)&lt;/p&gt;

&lt;h1 id=&quot;il-blocco-delle-applicazioni-tramite-k1000-passo-per-passo&quot;&gt;Il blocco delle applicazioni tramite K1000, passo per passo&lt;/h1&gt;

&lt;p&gt;Il blocco delle applicazioni su Kace funziona con una doppia logica:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Una &lt;a href=&quot;#la-label&quot;&gt;&lt;em&gt;Label&lt;/em&gt;&lt;/a&gt;, in grado di controllare e bloccare i software&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Uno o più Software marcati come &lt;a href=&quot;#i-software-da-bloccare&quot;&gt;&lt;em&gt;Not Allowed&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Per funzionare, è necessario che &lt;strong&gt;entrambe&lt;/strong&gt; le condizioni siano &lt;strong&gt;vere&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;la-label&quot;&gt;La Label&lt;/h2&gt;

&lt;p&gt;Kace mette a disposizione una Label già preconfezionata, secondo i parametri di default.&lt;/p&gt;

&lt;p&gt;Useremo quindi questa per illustrare il funzionamento del blocco applicativo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/K1000_appcontrol.png&quot; alt=&quot;Screenshot 1 - Default Application Control Label&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Portarsi in &lt;em&gt;Home&lt;/em&gt; ed in seguito in &lt;em&gt;Label Management&lt;/em&gt; e selezionare &lt;strong&gt;Labels&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;La nostra etichetta di default si chiama &lt;strong&gt;“ApplicationControlDevices”&lt;/strong&gt; ed è così impostata:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/appcontrol_label.png&quot; alt=&quot;Screenshot 2 - Appcontrol Label Details&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;significato-della-label&quot;&gt;Significato della Label&lt;/h3&gt;

&lt;p&gt;Illustriamo velocemente il significato dei vari flag:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Device Inventory: La Label si applica all’Inventario dei devices (quindi: ai PC)
    &lt;ul&gt;
      &lt;li&gt;Allow Application Control:    La Label è in grado di controllare l’avvio delle applicazioni&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Resources (Processes, Services, Startup Items):   La Label si può applicare anche a processi e servizi&lt;/li&gt;
  &lt;li&gt;Catalog:  La Label si applica al Catalogo Software (&lt;strong&gt;essenziale&lt;/strong&gt; per il buon funzionamento del meccanismo di blocco!)&lt;/li&gt;
  &lt;li&gt;Software: Come sopra, ma per i software non normalizzati dal catalogo&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;i-software-da-bloccare&quot;&gt;I software da bloccare&lt;/h2&gt;

&lt;p&gt;Portiamoci nel &lt;strong&gt;Software Catalog&lt;/strong&gt; (&lt;em&gt;Inventory&lt;/em&gt; -&amp;gt; &lt;em&gt;Software Catalog&lt;/em&gt;), che racchiude e “normalizza” tutti i software rilevati e riconosciuti, all’interno di un unico nome. Più chiaramente, avremo ad esempio “iTunes 12.x”, che contiene tutte le revisioni di iTunes 12 (es: 12.1, 12.4, 12.74 e via dicendo).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lavorare nel Catalogo Software ci consente di bloccare o monitorare un software indipendentemente dagli aggiornamenti che riceve.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/appcontrol_software_catalog.png&quot; alt=&quot;Screenshot 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una volta trovato il nostro software (prendiamo sempre ad esempio iTunes 12.x), selezioniamo il checkbox e da menu “Choose Action” scegliamo “&lt;strong&gt;Mark Not Allowed&lt;/strong&gt;”&lt;/p&gt;

&lt;p&gt;In alternativa, è possibile spuntare “&lt;strong&gt;Not Allowed&lt;/strong&gt;” all’interno della pagina del software di nostro interesse. L’autosave è automatico nel momento del cambio di selezione del checkbox.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/software_catalog_detail.png&quot; alt=&quot;Screenshot 4&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;i-pc-e-la-loro-label&quot;&gt;I PC e la loro Label&lt;/h2&gt;

&lt;p&gt;Ora che abbiamo capito come funzionano sia la Label (che si applica ai PC) che il marker di blocco (relativo ai software), possiamo metterli insieme ed ottenere l’effetto desiderato.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTA BENE:&lt;/strong&gt; &lt;em&gt;il meccanismo di Kace bloccherà l’apertura dei programmi SOLO sui PC a cui abbiamo applicato la Label “ApplicationControlDevice” e solo a loro&lt;/em&gt;. In questa fase sperimentale l’etichetta NON VIENE applicata di default a tutti i device in inventario e l’operazione dovrà quindi essere fatta manualmente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un pc che ha un software bloccato ma che non appartiene alla Label continuerà ad eseguire quel software come se nulla fosse, senza alcun problema.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 Otteniamo il nome od i nomi dei PC che ci interessa inserire nella Label. Per fare ciò abbiamo diverse strade, tutte corrette:
    &lt;ol&gt;
      &lt;li&gt;Lo conosciamo e lo troviamo direttamente in Inventario&lt;/li&gt;
      &lt;li&gt;Dal Catalogo Software clicchiamo sul numero nella colonna “Installed”, che ci porterà alla lista di tutti i PC con quel software&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/appcontrol_locked.png&quot; alt=&quot;Screenshot 5&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 Selezioniamo il checkbox a fianco del o dei PC di nostro interesse e da menu “&lt;strong&gt;Choose Action&lt;/strong&gt;” facciamo click su “&lt;strong&gt;Apply Labels&lt;/strong&gt;”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/apply_label.png&quot; alt=&quot;Screenshot 6&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 Scegliamo quindi la Label “&lt;strong&gt;ApplicationControlDevices&lt;/strong&gt;” e trasciniamola nella parte destra della finestra, cliccando poi su “&lt;strong&gt;Apply Labels&lt;/strong&gt;”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/labels_list.png&quot; alt=&quot;Screenshot 7&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;linventario&quot;&gt;L’Inventario&lt;/h2&gt;

&lt;p&gt;Abbiamo fatto le regole. Abbiamo applicato le Labels. Manca ancora qualcosa?&lt;/p&gt;

&lt;p&gt;Uno dei punti di forza dell’agente Kace è quello di lavorare sostanzialmente offline: si collega una volta al server, riceve tutte le regole, le informazioni e gli script e poi continua a lavorare, da solo, senza più bisogno di dialogare col server. E continua a fare tutto ciò che gli è stato detto di fare fino a prova contraria. Questo meccanismo si chiama “Inventario” e nel nostro caso viene eseguito una volta ogni 8 ore (almeno) da ogni singolo computer inventariato.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Le nuove regole di blocco, quindi, verranno applicate al PC al suo prossimo contatto (cioè al prossimo inventario)&lt;/em&gt;. Le potremo forzare manualmente (click sul box del device e poi “&lt;strong&gt;Force Inventory&lt;/strong&gt;”) ma, in condizioni normali, il frutto delle nostre regole si vedrà solo dopo alcune ore (ed un riavvio del PC) e non in tempo reale.&lt;/p&gt;

&lt;h2 id=&quot;il-risultato-finale&quot;&gt;Il risultato finale&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/final_result.png&quot; alt=&quot;Screenshot 8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In seguito alla creazione della lista di blocco (alcuni software in questa immagine sono solo puramente a scopo di esempio e non si intende veramente bloccarli), all’assegnazione della Label al PC ed al propagarsi delle regole tramite inventario, una volta che l’utente tenterà di aprire il software riceverà un alert nell’angolo basso a destra dello schermo, come questo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/appcontrol/messagebox.png&quot; alt=&quot;Screenshot 9&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Jul 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/blog/kace/blocco-applicativo-k1000/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/kace/blocco-applicativo-k1000/</guid>
        
        <category>kace</category>
        
        <category>script</category>
        
        <category>vbs</category>
        
        <category>smartcard</category>
        
        <category>security</category>
        
        <category>encryption</category>
        
        
        <category>Kace</category>
        
      </item>
    
      <item>
        <title>Come bloccare l'hotlinking delle immagini con .htaccess</title>
        <description>&lt;p&gt;Quando si parla di hotlinking  ci si riferisce ad una pratica – molto abusata – che permette di mostrare una risorsa (tipicamente un’immagine) all’interno di una pagina web senza che questa sia presente all’interno del proprio spazio, sfruttando quindi la banda e le risorse del server esterno che la ospita fisicamente.&lt;/p&gt;

&lt;h1 id=&quot;lhotlinking-danneggia-il-tuo-sito&quot;&gt;L’HOTLINKING DANNEGGIA IL TUO SITO&lt;/h1&gt;

&lt;p&gt;Facciamo un esempio. L’immagine che vedete qui sotto è stata caricata direttamente su un mio sito (ospite originale di questo articolo). Il server web non fa altro che andare a caricare una risorsa interna (l’immagine stessa) e mostrarla al visitatore, senza alcun carico elaborativo extra.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/hotlinking-htaccess/kenny-mccormick.jpg&quot; alt=&quot;Kenny&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il codice dell’immagine è il seguente:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/wp-content/uploads/2012/05/kenny-mccormick.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;border=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;320&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;240&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Un sito esterno, invece di effettuare il download dell’immagine e di caricarla sul proprio server (cosa che, oltretutto, è sempre consigliabile in quanto migliora moltissimo i tempi di caricamento e le prestazioni generali del sito), ottiene il collegamento diretto alla risorsa e lo include all’interno di una propria pagina.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.skyflash.it/wp-content/uploads/2012/05/kenny-mccormick.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;border=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;320&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;240&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Il risultato sarà che il secondo sito, eterno al nostro, sfrutta l’immagine senza però sacrificare il proprio spazio web, mentre il nostro sito, su cui risiede l’immagine, sarà sottoposto ad un carico eccessivo (ed assolutamente non richiesto nè tanto meno gradito) sia per quanto riguarda la propria banda passante che per le risorse del server.&lt;/p&gt;

&lt;h1 id=&quot;come-proteggersi-da-hotlinking&quot;&gt;COME PROTEGGERSI DA HOTLINKING&lt;/h1&gt;

&lt;p&gt;Sono sufficienti alcune righe da aggiungere al proprio, immancabile, file &lt;em&gt;.htaccess&lt;/em&gt; e, se volete, un’immagine preparata per lo scopo, che servirà per sbattere in faccia al webmaster antipatico la dura verità :smile:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ATTENZIONE:&lt;/strong&gt; la modifica di .htaccess, se fatta da persone non esperte e non particolarmente attente, può generare molti problemi al vostro sito WordPress, fino a &lt;strong&gt;renderlo inaccessibile&lt;/strong&gt;. Assicuratevi quindi di fare &lt;strong&gt;SEMPRE una copia di sicurezza&lt;/strong&gt; di .htaccess prima di cominciare le modifiche&lt;/p&gt;

&lt;p&gt;Aprite in un qualsaisi editor di testo il vostro file &lt;em&gt;.htaccess&lt;/em&gt; ed in coda (se usate WordPress, dovrebbero esserci solo le direttive di default) e &lt;strong&gt;dopo ### END WordPress ###&lt;/strong&gt; aggiungete il seguente codice:&lt;/p&gt;

&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;### Blocca l'hotlinking - Webmaster cattivo pussa via&lt;/span&gt;
RewriteEngineon
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^$
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^http(s)?://(www\.)?skyflash.it[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^http(s)?://(www\.)?google.com[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_USER_AGENT}!googlebot[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{REQUEST_URI}!^hotlink.jpg$
&lt;span class=&quot;nc&quot;&gt;RewriteRule&lt;/span&gt;\.(jpg|jpeg|png|gif|js|swf)$hotlink.jpg[NC,R,L]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;spiegazione&quot;&gt;SPIEGAZIONE&lt;/h2&gt;

&lt;p&gt;Alla &lt;strong&gt;terza riga&lt;/strong&gt; trovate:&lt;/p&gt;

&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Questa istruzione consente ai referrer che non forniscono informazioni di accedere al contenuto. Ciò è reso necessario in quanto molti visitatori (soprattutto quelli che si connettono dall’ufficio e si trovano dietro a proxy) sono protetti da un firewall che non rilascia informazioni al server per ragioni di sicurezza.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Righe 4, 5 e 6:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^http(s)?://(www\.)?skyflash.it[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^http(s)?://(www\.)?google.com[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_USER_AGENT}!googlebot[NC]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;specificano i domini che invece possono effettuare l’hotlinking e quindi visualizzare le immagini presenti sul server. Quindi scriveremo il nostro dominio internet e, in caso vogliate farvi indicizzare le immagini, Google. Tutti gli altri sono fuori.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Riga 7:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{REQUEST_URI}!^hotlink.jpg$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Se proprio qualcuno vuole rubare qualche immagine, allora lasciamogli prendere quella che abbiamo preparato per segnalare gli hotlinker. Questa riga ci assicura che l’immagine sia sempre visualizzabile.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Riga 8:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;RewriteRule&lt;/span&gt;\.(jpg|jpeg|png|gif|js|swf)$hotlink.jpg[NC,R,L]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Specifica il formato dei file protetti dall’hotlinking (non solo le immagini ne sono soggette) e sostituisce le richieste con un’immagine statica.&lt;/p&gt;

&lt;p&gt;Ovviamente potrete specificare l’immagine che desiderate, ma assicuratevi che questa non sia protetta (vedi riga precedente) oppure, ancora meglio, caricatela su una risorsa esterna come &lt;a href=&quot;http://db.tt/wgafhzXi&quot;&gt;Dropbox&lt;/a&gt;, o il risultato sarà un loop infinito!&lt;/p&gt;

&lt;h3 id=&quot;concedere-laccesso-a-bing-yahoo-e-facebook&quot;&gt;CONCEDERE L’ACCESSO A BING, YAHOO E FACEBOOK&lt;/h3&gt;

&lt;p&gt;Esattamente come abbiamo fatto per Google, aggiungiamo al nostro &lt;em&gt;.htaccess&lt;/em&gt; le seguenti direttive:&lt;/p&gt;

&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!msn.[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!yahoo.[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^https?://(www\.)?facebook\.com[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_USER_AGENT}!facebookplatform[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_USER_AGENT}!msnbot[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;${HTTP_USER_AGENT}!slurp[NC]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusioni&quot;&gt;CONCLUSIONI&lt;/h2&gt;

&lt;p&gt;Il risultato finale sarà quindi il seguente:&lt;/p&gt;

&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;### Blocca l'hotlinking - Webmaster cattivo pussa via&lt;/span&gt;

RewriteEngineon
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^$
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^http(s)?://(www\.)?skyflash.it[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^http(s)?://(www\.)?google.com[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!msn.[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!yahoo.[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_REFERER}!^https?://(www\.)?facebook\.com[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_USER_AGENT}!googlebot[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_USER_AGENT}!facebookplatform[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{HTTP_USER_AGENT}!msnbot[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;${HTTP_USER_AGENT}!slurp[NC]
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt;%{REQUEST_URI}!^hotlink.jpg$
&lt;span class=&quot;nc&quot;&gt;RewriteRule&lt;/span&gt;\.(jpg|jpeg|png|gif|js|swf)$hotlink.jpg[NC,R,L]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chi dovesse linkare ad una risorsa con estensione jpg, jpeg, png, gif, js o swf sul sito così “trattato”, come unico risultato avrà la visualizzazione della seguente immagine&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/hotlinking-htaccess/hotlink.jpg&quot; alt=&quot;Hotlink-Monkey&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Se guardando le statistiche del vostro spazio web avete notato un consumo eccessivo di banda in uscita o se state rilevando una grande quantità di accessi esterni alle stesse immagini, probabilmente siete hotlinkati da qualcuno. Ora sapete come difendervi.&lt;/p&gt;

&lt;p&gt;Risorse esterne:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.istanto.net/stop-bandwith-thief-using-rewrite-rules-on-htaccess-file.html&quot;&gt;Stop bandwith thief using rewrite rules on .htaccess file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.htaccesstools.com/hotlink-protection/&quot;&gt;Prevent hotlinking of images – how to hotlink protect&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hongkiat.com/blog/smarter-way-to-prevent-image-hotlinking-with-htaccess/&quot;&gt;Smarter Way To Prevent Image Hotlinking With .Htaccess&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gabrieleromanato.com/2012/03/impedire-hotlinking-immagini-htaccess/&quot;&gt;Impedire l’hotlinking delle immagini con il file .htaccess&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vincenzodibiaggio.it/2008/07/11/proteggiamoci-dallhotlinking-con-un-semplice-file-htaccess/&quot;&gt;Proteggiamoci dall’hotlinking con un semplice file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.thewebsqueeze.com/web-design-tutorials/stop-image-hotlinking-with-htaccess.html&quot;&gt;Stop image hotlinking with .htaccess&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.skyflash.it/internet-reti/sicurezza/come-bloccare-lhotlinking-delle-immagini-tramite-htaccess/6552/&quot;&gt;Il post originale&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 13 Apr 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/blog/wordpress/bloccare-hotlinking-immagini/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/wordpress/bloccare-hotlinking-immagini/</guid>
        
        <category>htaccess</category>
        
        <category>apache</category>
        
        <category>wordpress</category>
        
        
        <category>Wordpress</category>
        
        <category>Apache</category>
        
      </item>
    
      <item>
        <title>La traduzione in italiano di Morrowind, Tribunal e Bloodmoon</title>
        <description>&lt;!-- ![TitleImg](/static/assets/img/blog/29-morrowind.webp) --&gt;

&lt;h4 id=&quot;il-2002-ludicamente-parlando-verrÀ-ricordato-per-luscita-dellattesissimo-terzo-capitolo-della-saga-the-elder-scrolls&quot;&gt;IL 2002, LUDICAMENTE PARLANDO, VERRÀ RICORDATO PER L’USCITA DELL’ATTESISSIMO TERZO CAPITOLO DELLA SAGA THE ELDER SCROLLS.&lt;/h4&gt;

&lt;p&gt;The Elder Scrolls III: Morrowind ha rivoluzionato i canoni di libertà individuale del giocatore nel mondo virtuale del gioco stesso. Mai, fino a Morrowind, un CRPG era stato in grado di offrire una tale libertà di esplorazione ed una tale quantità di quests secondarie e PNG.&lt;/p&gt;

&lt;h3 id=&quot;la-traduzione-di-morrowind-un-po-di-storia&quot;&gt;LA TRADUZIONE DI MORROWIND: UN PO’ DI STORIA&lt;/h3&gt;

&lt;p&gt;Atteso dai fan di mezzo mondo, il suo lancio Italiano destò molte polemiche. Il gioco infatti, inspiegabilmente, non venne tradotto in nessuna sua parte. Ricordo ancora le parole di un P.R. Ubisoft, il quale dichiarò, più o meno, che la traduzione non era stata fatta per motivi di tempo. In pratica, ci disse che non lo avevano tradotto perchè altrimenti ci sarebbe stato un pesante ritardo nella distribuzione, e che quindi avevano preso questa decisione per fare un favore a noi giocatori. Che avesse forse dinanzi un roseo futuro da umorista? O forse da politico? Fatto sta che Morrowind venne distribuito in rigorosa lingua Inglese. Il CRPG che avrebbe rivoluzionato il genere, il gioco con la più grande mole di testi mai realizzato, sarebbe stato di difficile comprensione per molti giocatori Italiani.&lt;/p&gt;

&lt;p&gt;Qualche mese prima della sua uscita nel nostro mercato, io ed altri appassionati ci eravamo già procurati la versione USA del gioco (per quanto mi riguarda, fu la Collector’s Edition), scoprendo così le fantastiche potenzialità dell’editor integrato. Tramite il TES Construction Set era possibile realizzare praticamente di tutto; si potevano creare nuovi oggetti, nuove quest, nuovi NPC. Si poteva addirittura realizzare un plugin che cambiasse ogni singola parola del gioco. Come? Era possibile cambiare i testi a video? Allora era anche possibile tradurre Morrowind!&lt;/p&gt;

&lt;h3 id=&quot;si-comincia-a-tradurre&quot;&gt;SI COMINCIA A TRADURRE!&lt;/h3&gt;

&lt;p&gt;Quasi per gioco, iniziai a tradurre il tutorial e le prime fasi di gioco. In quegli anni uno dei miei contatti era Lello Sarti, responsabile della testata online &lt;a href=&quot;http://forum.multiplayer.it/showthread.php?209954-RPGPLAYER&quot;&gt;RPGPlayer.it&lt;/a&gt;, poi assorbita da Multiplayer. Lello era a sua volta in contatti con alcuni membri dell’ITP, a cui riferì che io avevo iniziato a tradurre il gioco. Il prossimo passo fu ovvio: stava per prendere il via la traduzione in Italiano più lunga e complessa mai realizzata a livello amatoriale!&lt;/p&gt;

&lt;p&gt;Proprio su questo stesso dominio istituimmo una mailing list con cui tenerci in contatto, e creai anche un piccolo forum (utilizzando lo storico &lt;a href=&quot;http://forum.snitz.com/&quot;&gt;Snitz! forum&lt;/a&gt;, un ormai obsoleto forum in .ASP). Nel frattempo il gioco era già uscito in Italia e, come c’era da immaginarsi, venne accolto con molta timidezza, proprio a causa della sua gigantesca mole di testo in Inglese. Non ci volle molto perchè la voce secondo cui l’ITP, già noto per il meraviglioso lavoro svolto con &lt;a href=&quot;http://www.skyflash.it/2009/10/la-traduzione-in-italiano-di-planescape-torment-del-team-itp/&quot;&gt;Planescape: Torment&lt;/a&gt;, si era messo al lavoro su Morrowind si diffondesse. Nel giro di alcuni mesi si parlava di noi su Usenet, sui forum, e persino su qualche rivista.&lt;/p&gt;

&lt;h3 id=&quot;i-primi-problemi&quot;&gt;I PRIMI PROBLEMI…&lt;/h3&gt;

&lt;p&gt;L’opera di traduzione stava procedendo bene, quando ci rendemmo conto di una cosa: la particolare struttura del Journal – il Diario – di Morrowind era basata sul linguaggio HTML, ed alcuni termini erano veri e propri hyperlinks che riconducevano ad altre sezioni, le quali erano a loro volta collegate con altre ancora. Non aver verificato quali fossero questi particolari termini (indicati col prefisso @, es: @elves) significava una sola cosa: era tutto da rifare!&lt;/p&gt;

&lt;p&gt;Per nostra grande fortuna, uno dei componenti il team era un buon programmatore e riuscì a realizzare un software il cui compito era quello di analizzare il Journal ed estrarre tutti i termini ‘speciali’. Questo comportò ovviamente un ritardo sui tempi, ma ci permise di non buttare tutto quanto fino a quel momento realizzato, limitandoci a ricontrollare solo le parti indicate dal nostro programma specifico.&lt;/p&gt;

&lt;p&gt;I mesi passavano ed il lavoro proseguiva. Le richieste da parte degli utenti fioccavano da più parti, tutti impazienti di poter finalmente giocare a Morrowind senza essere costretti a tenere un vocabolario sulle gambe. Ci fu anche qualche problema con Ubisoft, il publisher, di cui non vi parlerò neppure sotto tortura perchè sono comunque argomenti riservati.&lt;/p&gt;

&lt;h3 id=&quot;la-quest-aggiuntiva&quot;&gt;LA QUEST AGGIUNTIVA&lt;/h3&gt;

&lt;p&gt;Ci mancava ancora qualcosa, però. In fin dei conti si stava lavorando sul TES, e si stava realizzando un plugin, no? E allora, perchè non distribuire nello stesso pacchetto anche una quest aggiuntiva, la quale avrebbe ricompensato il giocatore con un libro il cui contenuto si riferiva a “Coloro i quali fecero l’impresa”? In quel libro avremmo riportato una breve ‘Bio’ di ciascuno di noi, con uno stile ovviamente conforme all’ambientazione di gioco. Dopo tanto lavoro, un minimo di auto referenzialità mi pare dovuta, no?&lt;/p&gt;

&lt;p&gt;Purtroppo, a causa di mancanza di tempo, io fui costretto a sospendere la mia collaborazione con l’ITP anzitempo, ma questo non comportò alcun problema per i ragazzi, che non mi stancherò mai di ringraziare per avermi comunque incluso sia fra i ringraziamenti nelle note di rilascio che nella quest aggiuntiva, malgrado la mia defezione anticipata.&lt;/p&gt;

&lt;p&gt;Ebbene, se siete arrivati fin qui a leggere e state cercando disperatamente la traduzione di Morrowind, direi che è giunto il momento di ricompensarvi per il tempo dedicato ai miei ricordi.&lt;/p&gt;

&lt;h3 id=&quot;la-traduzione-di-morrowind-in-italiano--download&quot;&gt;LA TRADUZIONE DI MORROWIND IN ITALIANO – DOWNLOAD&lt;/h3&gt;

&lt;p&gt;Questa è la versione definitiva della traduzione, che non necessita di preventivi aggiornamenti del gioco. Si basa sull’edizione Game of the Year di Morrowind e contiene sia la traduzione del gioco base che della sua espansione “vampiresca”, BloodMoon. E’ un unico file auto installante che, se necessario, aggiornerà la vostra copia di The Elder Scrolls III: Morrowind alla più recente versione 1.6&lt;/p&gt;

&lt;p&gt;Si consiglia di non applicare la traduzione ad una partita già in corso; ciò potrebbe corrompere i salvataggi. E’ comunque possibile “trattare” i propri salvataggi con il programma Savepatcher, distribuito nell’archivio Tribunal.zip&lt;/p&gt;

&lt;p&gt;Installare la traduzione di Tribunal solo dopo aver installato il file precedente, relativo alle traduzioni di Morrowind e Bloodmoon&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Apr 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/blog/games/la-traduzione-di-morrowind-e-bloodmoon/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/games/la-traduzione-di-morrowind-e-bloodmoon/</guid>
        
        <category>Morrowind</category>
        
        <category>ITP</category>
        
        <category>Games</category>
        
        
        <category>Games</category>
        
      </item>
    
      <item>
        <title>[K1000 Scripting] Find and report all PCs with a smartcard reader installed</title>
        <description>&lt;h1 id=&quot;target&quot;&gt;Target&lt;/h1&gt;

&lt;p&gt;Find and report all managed Windows PCs in K1000 Inventory with a smartcard reader installed.&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;The script does not depend on K1000, so if you don’t have KACE SMA in your environment don’t worry: the script is still useful!&lt;/p&gt;

&lt;h2 id=&quot;components&quot;&gt;Components&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[The Query] This script&lt;/li&gt;
  &lt;li&gt;[The Automation] Kace Systems Management Appliance (AKA ‘K1000’)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;The vbs script executes a WMI query over the target device(s) and saves an output file named &lt;em&gt;smartcard.txt&lt;/em&gt; (see below in the &lt;a href=&quot;#setup&quot;&gt;Setup section&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;The vbs script is scheduled and deployed to the target device(s) via K1000 &lt;a href=&quot;#the-kscript&quot;&gt;&lt;em&gt;Online KScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A K1000 &lt;a href=&quot;#the-custom-inventory-rule&quot;&gt;&lt;em&gt;Custom Inventory Rule&lt;/em&gt;&lt;/a&gt; reads the output file for every inventoried device and stores the information in the database&lt;/li&gt;
  &lt;li&gt;A scheduled &lt;a href=&quot;#the-report&quot;&gt;Report&lt;/a&gt; (choose your favorite format between HTML, CSV, PDF or Excel) returns only PCs with a smart card reader installed&lt;/li&gt;
  &lt;li&gt;Done!&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;

&lt;h3 id=&quot;the-kscript-smarcardvbs&quot;&gt;The KScript (smarcard.vbs)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Download &lt;a href=&quot;/static/assets/files/blog/kace-smartcard/smartcard.vbs&quot;&gt;the script&lt;/a&gt; or copy &amp;amp; paste the following code:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;strComputer &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;
Dim log
Set log &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Wscript.CreateObject&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Scripting.Filesystemobject&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Set f &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; log.CreateTextFile&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ools&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;martcard.txt&quot;&lt;/span&gt;, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Set objWMIService &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; GetObject&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;winmgmts:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &amp;amp; strComputer &amp;amp; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;oot&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;IMV2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
Set colItems &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; objWMIService.ExecQuery&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; _
    &lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM Win32_PnPSignedDriver Where DeviceClass = 'SMARTCARDREADER'&quot;&lt;/span&gt;,,48&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
For Each objItem &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;colItems 
    f.WriteLine &lt;span class=&quot;s2&quot;&gt;&quot;DeviceClass: &quot;&lt;/span&gt; &amp;amp; objItem.DeviceClass
Next
f.Close
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Edit &lt;strong&gt;line 4&lt;/strong&gt; with the path where you want to save the output file. In our environment every PC has a &lt;em&gt;“C:\Tools”&lt;/em&gt; directory for service purpose, so I decided to save the output there.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Set f = log.CreateTextFile(&quot;C:\Tools\smartcard.txt&quot;, 2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Go to your &lt;em&gt;K1000 Dashboard&lt;/em&gt;, then go to &lt;em&gt;Scripting&lt;/em&gt; and create a &lt;strong&gt;New Script&lt;/strong&gt; (&lt;em&gt;Choose Action / New&lt;/em&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name the script as your wish (for example: Check Smart Card Reader) and follow these steps:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;script-basic-settings&quot;&gt;Script Basic Settings&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Type: &lt;strong&gt;Online KScript&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Enabled: &lt;strong&gt;Yes&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Deploy: one or some devices, all devices or to a Device Label, according to your needs in your environment&lt;/li&gt;
  &lt;li&gt;Windows Run As: &lt;strong&gt;Local System&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Upload the smartcard.vbs as &lt;strong&gt;New Dependecy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tasks&quot;&gt;Tasks&lt;/h4&gt;

&lt;p&gt;We want the script to run once in every PC, so we’ll use a “checkmark” (the smartcard.txt) to verify that…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Verify: &lt;strong&gt;Verify a file exists…&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;C:\Tools\smartcard.txt&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Remediation: &lt;strong&gt;Launch a program…&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Directory: &lt;strong&gt;$(KACE_SYS_DIR)&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;File: &lt;strong&gt;cscript.exe $(KACE_DEPENDENCY_DIR)\smartcard.vbs&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Wait for completion: &lt;strong&gt;Yes&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;On Remediation Success: &lt;strong&gt;Upload a file…&lt;/strong&gt; (note: this step is not necessary and only for archiving purpose)
    &lt;ul&gt;
      &lt;li&gt;Directory: &lt;strong&gt;C:\Tools&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;File: &lt;strong&gt;smartcard.txt&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…and &lt;strong&gt;Save&lt;/strong&gt; your brand new script.&lt;/p&gt;

&lt;p&gt;The Task and its steps are summarized in the following image. When you’re ready, let’s jump to the &lt;a href=&quot;#the-custom-inventory-rule&quot;&gt;Step 4!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/smartcard/screenshot1.png&quot; alt=&quot;Screenshot 1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-custom-inventory-rule&quot;&gt;The Custom Inventory Rule&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In the K100 Dashboard, now go to &lt;em&gt;Inventory&lt;/em&gt; section, then go to &lt;em&gt;Software&lt;/em&gt; and create a &lt;strong&gt;new Software entry&lt;/strong&gt; (&lt;em&gt;Choose Action / New&lt;/em&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name the rule as your wish (for example: IT Dep — Check Smart Card Reader) and follow these steps:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Publisher: &lt;strong&gt;IT Department&lt;/strong&gt; (it’s useful for further searches into the &lt;em&gt;Software Inventory&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;Supported Operating Systems: &lt;strong&gt;All the Windows OSs in your Inventory&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Custom Inventory Rule: &lt;code class=&quot;highlighter-rouge&quot;&gt;ShellCommandTextReturn(cmd /c type C:\Tools\smartcard.txt)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…and &lt;strong&gt;Save&lt;/strong&gt; your new Custom Inventory Rule.&lt;/p&gt;

&lt;p&gt;Here’s the summary image&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/smartcard/screenshot2.png&quot; alt=&quot;Screenshot 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we need all our devices complete their inventory. The new Custom Inventory Rule creates a new entry in every device record managed by the K1000.&lt;/p&gt;

&lt;p&gt;If a smart card reader has been discovered we’ll have at least one “DeviceClass: SMARTCARDREADER” text iside the &lt;strong&gt;Custom Inventory Fields&lt;/strong&gt; section into every device record in &lt;em&gt;Inventory / Devices&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/smartcard/screenshot3.png&quot; alt=&quot;Screenhot 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Otherwise, if a smart card reader has not been discovered, we’ll have no text&lt;/p&gt;

&lt;p&gt;When all your devices has been inventoried and you’re ready, jump to the &lt;a href=&quot;#the-report&quot;&gt;next section&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-report&quot;&gt;The Report&lt;/h3&gt;

&lt;p&gt;In the K100 Dashboard, now go to &lt;em&gt;Reporting&lt;/em&gt; section, then in &lt;em&gt;Reports&lt;/em&gt; and create a new Report (&lt;em&gt;Choose Action / New&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;Name the Report as your wish (for example: PCs with Smart Card Reader) and follow these steps:&lt;/p&gt;

&lt;h4 id=&quot;title-and-topic&quot;&gt;Title and Topic&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Category: &lt;strong&gt;Inventory&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Topic: &lt;strong&gt;Device&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fields-to-display&quot;&gt;Fields to Display&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Device: &lt;strong&gt;System Name&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Operating System Info: &lt;strong&gt;Name&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;User Information: &lt;strong&gt;User Name&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Manufacturer and BIOS: &lt;strong&gt;System Model&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to add and modify any other field, according to your needings.&lt;/p&gt;

&lt;h4 id=&quot;filters&quot;&gt;Filters&lt;/h4&gt;

&lt;p&gt;Delete the default filter and create this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/assets/img/blog/kace/smartcard/report1.png&quot; alt=&quot;Filter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Save&lt;/strong&gt; your new report and try it.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Feb 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/blog/kace/k1000-report-pc-with-smartcard-reader/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/kace/k1000-report-pc-with-smartcard-reader/</guid>
        
        <category>kace</category>
        
        <category>script</category>
        
        <category>vbs</category>
        
        <category>smartcard</category>
        
        <category>security</category>
        
        <category>encryption</category>
        
        
        <category>Kace</category>
        
      </item>
    
      <item>
        <title>code snippet test</title>
        <description>&lt;p&gt;This is a raw snippet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hello world
123
This is a text snippet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a JavaScript snippet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const add = (a, b) =&amp;gt; a + b
const minus = (a, b) =&amp;gt; a - b

console.log(add(100,200))  // 300
console.log(minus(100,200))  // -100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a Python snippet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def say_hello():
    print(&quot;hello world!&quot;)

say_hello()   // &quot;hello world!&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Side note comment: applied a bug fix similar to &lt;a href=&quot;https://github.com/Atlas7/atlas7.github.io/commit/6659f4a47f6ec66987adb0f683a9c6f3842252ae#diff-818954a41dbfb01af70050a459c603b9&quot;&gt;this commit&lt;/a&gt; to ensure code snippet does not collapse unexpectly upon clicking on it. This issue is tracked &lt;a href=&quot;https://github.com/jarrekk/Jalpc/issues/97&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Dec 2017 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/blog/html/test-code-snippets/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/html/test-code-snippets/</guid>
        
        <category>Jalpc</category>
        
        <category>Jekyll</category>
        
        
        <category>HTML</category>
        
      </item>
    
      <item>
        <title>Identificare e terminare processi zombie su Linux</title>
        <description>&lt;p&gt;Recentemente ho avuto necessità di eseguire un pò di tuning su un server Linux, spesso infestato da processi zombie che lo portavano a raggiungere elevatissimi carichi operativi. Dalla descrizione di Wikipedia:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nei sistemi operativi Unix e Unix-like, un processo zombie o processo defunto è un processo informatico che, nonostante abbia terminato la propria esecuzione, possiede ancora un PID ed un process control block, necessario per permettere al proprio processo padre di leggerne il valore di uscita.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Girovagando alla ricerca di informazioni utili, mi sono imbattuto in un ottimo script, da copiare sui vostri server, in grado di identificare e killare lo zombie, oltre a lasciarne una traccia un un file di log apposito.&lt;/p&gt;

&lt;h2 id=&quot;lo-script-kill-zombie&quot;&gt;LO SCRIPT KILL-ZOMBIE&lt;/h2&gt;

&lt;p&gt;Come prima cosa, creeremo (con i permessi di root) un nuovo file kill-zombie&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root
vi kill-zombies
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In seguito copiamo il seguente codice ed incolliamolo nel file appena creato&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#! /bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Zombie processes killing script. Must be run under root.&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--admin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ps ax | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PID&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 ps lOp | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UID&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print&quot;pid: &quot;$3&quot; *** parent_pid: &quot;$4&quot; *** status: &quot;$10&quot; *** process: &quot;$13}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;: Z&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 0&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;zombie processes found:
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
ps ax | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PID&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 ps lOp | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UID&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print&quot;pid: &quot;$3&quot; *** parent_pid: &quot;$4&quot; *** status: &quot;$10&quot; *** process: &quot;$13}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;: Z&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Kill zombies? [y/n]: &quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;keyb
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$keyb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'y'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;killing zombies..
ps ax | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PID&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 ps lOp | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UID&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print$4&quot; status:&quot;$10}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;status:Z&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi
else
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;no zombies found!
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--cron&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ps ax | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PID&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 ps lOp | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UID&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print&quot;pid: &quot;$3&quot; *** parent_pid: &quot;$4&quot; *** status: &quot;$10&quot; *** process: &quot;$13}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;: Z&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 0&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then
&lt;/span&gt;ps ax | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PID&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 ps lOp | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UID&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print$4&quot; status:&quot;$10}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;status:Z&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;: killed some zombie processes!&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /var/log/zombies.log
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'usage: kill-zombies {--cron|--admin}'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ora rendiamolo eseguibile e spostiamolo in /usr/bin&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x kill-zombies
&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;kill-zombies /usr/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;funzionamento&quot;&gt;FUNZIONAMENTO&lt;/h3&gt;

&lt;p&gt;Lo script viene evocato con un flag, che ne modifica il comportamento:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kill-zombies &lt;span class=&quot;nt&quot;&gt;--admin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;L’esecuzione avviene manualmente. Se vengono rilevati processi zombie l’utente ne viene informato e deve confermare l’operazione&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kill-zombies &lt;span class=&quot;nt&quot;&gt;--cron&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lo script &lt;strong&gt;dovrà essere inserito nel crontab&lt;/strong&gt; e richiamato quindi a cadenze regolari dal server. I processi vengono killati in automatico e ne viene lasciata traccia in /var/log/zombies.log&lt;/p&gt;

&lt;h3 id=&quot;inserimento-nel-crontab&quot;&gt;INSERIMENTO NEL CRONTAB&lt;/h3&gt;

&lt;p&gt;Richiamiamo l’editor del crontab con questo comando&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crontab &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ed inseriamo questa riga:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/10 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; /usr/bin/kill-zombies &lt;span class=&quot;nt&quot;&gt;--cron&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In questo modo, lo script verrà eseguito ogni 10 minuti a cadenza regolare. In caso si voglia modificare l’intervallo di tempo, sarà sufficiente cambiare ad esempio */10 in */5 (per 5 minuti)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.skyflash.it/download/8205/&quot;&gt;Download zombies.sh (1 KB)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Riferimenti:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.skyflash.it/computer/linux-os/identificare-ed-uccidere-processi-zombie-in-un-server-linux/6076/&quot;&gt;Identificare ed uccidere processi zombie in un server Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.ubuntu.com/community/CronHowto&quot;&gt;CronHowTo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 25 Oct 2015 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/blog/linux/idenficare-processi-zombie-linux/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/linux/idenficare-processi-zombie-linux/</guid>
        
        <category>Linux</category>
        
        <category>Scripting</category>
        
        <category>Process</category>
        
        
        <category>Linux</category>
        
      </item>
    
  </channel>
</rss>
